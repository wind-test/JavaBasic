package example.demo12;

/**
 * @ClassName ThreadDemo12
 * @Description 此类用于演示功能
 * @Author Shark
 * @DateTime 2022年07月20日 15时28分03秒
 * @Version 1.0
 *
 * 线程的状态有几种?
 *      面向百度编程答案:5种或6种,早期百度还有一个答案7种
 *
 * 查询源码或Java API:
 *      线程的状态总共6种(正确)
 *          NEW(新建):
 *              线程对象被创建,并未执行start()的状态
 *          RUNNABLE(运行)
 *              线程正在运行的状态
 *          BLOCKED(阻塞)
 *              线程对象遇到同步并没有抢夺到同步资源的状态
 *          WAITING(无限等待)
 *              线程对象被资源对象调用了wait()
 *          TIMED_WAITING(计时等待)
 *              线程对象被执行sleep()的状态
 *          TERMINATED(终止)
 *              线程对象执行完毕run()后的状态
 *
 * 线程状态间的转换规则:
 *      新建状态转换关系:
 *          可以转换成"运行"状态:线程对象被执行了start()
 *      运行状态转换关系:
 *          可以转换成"阻塞"状态:线程对象遇到了同步,但没有抢夺到同步资源
 *          可以转换成"无限等待"状态:线程对象被调用了wait()
 *          可以转换成"计时等待"状态:线程对象被调用了sleep()
 *          可以转换成"终止"状态:线程对象执行完毕run()后的状态
 *      阻塞状态转换关系:
 *          可以转换成"运行"状态:线程对象抢夺到同步资源
 *      无限等待状态转换关系:
 *          如果是单线程程序:
 *              可以转换成"运行"状态:线程对象被调用了notify()或notifyAll()
 *          如果是多线程程序:
 *              可以转换成"运行"状态:线程对象被调用了notify()或notifyAll(),并且遇到同步抢夺到同步资源
 *              可以转换成"阻塞"状态:线程对象被调用了notify()或notifyAll(),并且遇到同步没有抢夺到同步资源
 *      计时等待状态转换关系:
 *          如果是单线程程序:
 *              可以转换成"运行"状态:线程对象指定休眠时间到
 *          如果是多线程程序:
 *              可以转换成"运行"状态:线程对象指定休眠时间到,并且遇到同步抢夺到同步资源
 *              可以转换成"阻塞"状态:线程对象指定休眠时间到,并且遇到同步没有抢夺到同步资源
 *
 * 聊聊网络上的线程5种状态和7种状态:
 *      7种状态:
 *          新建,就绪,运行,阻塞,无限等待,计时等待,终止
 *              就绪:线程对象被调用start(),JVM未调用run()的状态
 *              运行:线程对象被调用start(),JVM调用了run()的状态
 *      5种状态:
 *          新建,就绪,运行,等待,终止
 *              将阻塞,无限等待,计时等待合并为"等待"状态
 */
public class ThreadDemo12 {
    public static void main(String[] args) {

    }
}
