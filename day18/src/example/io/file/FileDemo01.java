package example.io.file;

/**
 * @ClassName FileDemo01
 * @Description 此类用于演示功能
 * @Author Shark
 * @DateTime 2022年07月18日 14时06分40秒
 * @Version 1.0
 *
 * IO流:
 *      含义:数据输入和输出的流动
 *      解释:
 *          输入:
 *              其它设备的数据==>内存
 *          输出:
 *              内存的数据==>其它设备
 *      分类:
 *          根据数据的流动方向进行分类:
 *              输入流
 *              输出流
 *          根据数据的流动单位进行分类:
 *              字节流
 *              字符流
 *          根据上述两种分类重新组合分类(四大基本流,抽象流):
 *              字节输入流
 *                  InputStream类
 *              字节输出流
 *                  OutputStream类
 *              字符输入流
 *                  Reader类
 *              字符输出流
 *                  Writer类
 *
 * 针对操作数据内容不同,将IO流程进行分类
 *      文件流:针对文件以字节或字符为单位进行输入或输出的IO流
 *          文件字节输入流
 *          文件字节输出流
 *          文件字符输入流
 *          文件字符输出流
 *      缓冲流:针对其它流添加高效读写操作的IO流
 *          缓冲字节输入流
 *          缓冲字节输出流
 *          缓冲字符输入流
 *          缓冲字符输出流
 *      转换流:针对读写过程中可以指定文件编码的IO流
 *          转换输入流
 *          转换输出流
 *      对象流:针对对象进行读写操作的IO流
 *          对象输入流
 *          对象输出流
 */
public class FileDemo01 {
}
