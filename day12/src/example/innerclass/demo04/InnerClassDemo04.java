package example.innerclass.demo04;

/**
 * @ClassName InnerClassDemo04
 * @Description 此类用于演示功能
 * @Author Shark
 * @DateTime 2022年07月09日 09时28分19秒
 * @Version 1.0
 *
 * 静态成员内部类(静态内部类)
 *      目的:
 *          在实际开发中,某些类不想被本类之外或者本包之外进行访问,只供本类进行使用或本包内部进行使用,现有的知识点满足不了我们
 *          需求,可以将这些类声明在某一个类的成员位置,既然是成员位置,可以使用权限访问级别进行修饰,从而达到限制使用的目的,且内
 *          部类的成员含有静态成员时,选择静态成员内部类
 *      权限:
 *          四种权限访问级别都可以,推荐使用private和缺省
 *      格式:
 *          public class 外部类类名 {
 *              修饰符 static class 内部类类名 {
 *
 *              }
 *          }
 *      注意:
 *          1.在静态成员内部类中既可以声明实例成员,也可以声明静态成员
 *          2.静态成员内部类中的实例成员如果进行获取,参考实例成员内部类
 *          3.在外部类中可以访问内部类的私有成员
 */
public class InnerClassDemo04 {
}
